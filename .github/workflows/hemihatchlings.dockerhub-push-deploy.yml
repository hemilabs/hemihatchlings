name: '[hemihatchlings] dockerhub web push'

on:
  push:
    tags:
      - 'mainnet-v*'
      - 'testnet-v*'

jobs:
  dockerhubpush:
    name: '[hemihatchlings] dockerhub web push'
    runs-on: ubuntu-latest
    outputs:
      namespace: ${{ steps.namespace.outputs.namespace }}
      repo: ${{ steps.repo.outputs.repo }}
      infra: ${{ steps.infra.outputs.infra }}
      tag: ${{ steps.vars.outputs.tag }}
      dockerfile: ${{ steps.dockerfile.outputs.DOCKERFILE }}

    steps:
      - name: Get tag
        id: vars
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "tag=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Dockerfile
        id: dockerfile
        run: |
          if [[ ${{ steps.vars.outputs.tag }} == "mainnet-v"* ]]; then
            echo "DOCKERFILE=Dockerfile.web.mainnet" >> $GITHUB_OUTPUT
          elif [[ ${{ steps.vars.outputs.tag }} == "testnet-v"* ]]; then
            echo "DOCKERFILE=Dockerfile.web.testnet" >> $GITHUB_OUTPUT
          fi
          
      - name: Namespace
        id: namespace
        run: |
          if [[ ${{ steps.vars.outputs.tag }} == "mainnet-v"* ]]; then
            echo "namespace=hemihatchlings" >> $GITHUB_OUTPUT
          elif [[ ${{ steps.vars.outputs.tag }} == "testnet-v"* ]]; then
            echo "namespace=hemihatchlings-test" >> $GITHUB_OUTPUT
          fi
      - name: Repo
        id: repo
        run: |
          if [[ ${{ steps.vars.outputs.tag }} == "mainnet-v"* ]]; then
            echo "repo=hemilabs/hemihatchlings-web" >> $GITHUB_OUTPUT
          elif [[ ${{ steps.vars.outputs.tag }} == "testnet-v"* ]]; then
            echo "repo=hemilabs/hemihatchlings-test" >> $GITHUB_OUTPUT
          fi

      - name: Infra
        id: infra
        run: |
          if [[ ${{ steps.vars.outputs.tag }} == "mainnet-v"* ]]; then
            echo "infra=infrastructure/kustomize_web/overlays/mainnet" >> $GITHUB_OUTPUT
          elif [[ ${{ steps.vars.outputs.tag }} == "testnet-v"* ]]; then
            echo "infra=infrastructure/kustomize_web/overlays/testnet" >> $GITHUB_OUTPUT
          fi

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push hemihatchlings-web
        uses: docker/build-push-action@v3
        with:
          tags: ${{ steps.repo.outputs.repo }}:${{ steps.vars.outputs.tag }}
          context: "{{defaultContext}}"
          file: ${{ steps.dockerfile.outputs.DOCKERFILE }}
          push: true

      - name: Build and Push hemihatchlings-api
        uses: docker/build-push-action@v3
        with:
          tags: hemilabs/hemihatchlings-api:${{ steps.vars.outputs.tag }}
          context: "{{defaultContext}}"
          file: "Dockerfile.api"
          push: true

  deploy_testnet_mainnet:
    name: "Deploy Testnet/Mainet to VKE"
    runs-on: "ubuntu-latest"
    needs: dockerhubpush
    permissions:
      contents: read
    environment:
      name: "staging"
      url: "https://hemihatchlings-test.hemi.xyz/"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.VKE_TEST_KUBECONFIG }}
          
      - name: Install Kustomize
        uses: imranismail/setup-kustomize@v2
    
      - name: Configure K8s Cluster Access for VKE
        env:
          VKE_TEST_KUBECONFIG: ${{ secrets.VKE_TEST_KUBECONFIG }}
        run: |
          echo $VKE_TEST_KUBECONFIG > ./kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml
  
      - name: Create K8s Secrets
        run: |
          if kubectl get configmap hemihatchlings-config --namespace=${{ needs.dockerhubpush.outputs.namespace }}; then
            echo "hemihatchlings-config already exists"
          else
            echo "Creating hemihatchlings-config"
            kubectl create configmap hemihatchlings-config \
            --from-literal=PORT=${{ secrets.PORT }} \
            --from-literal=RPC_URL=${{ secrets.RPC_URL }} \
            --namespace=${{ needs.dockerhubpush.outputs.namespace }}
          fi
          echo "Checking Dockerhub Secret"
  
    
      - name: Dockerhub Secrets
        run: |
          if kubectl get secret dockerhub-secret --namespace=${{ needs.dockerhubpush.outputs.namespace }}; then
            echo "Dockerhub Secret already exists"
          else
            echo "Creating Dockerhub Secret"
            kubectl create secret docker-registry dockerhub-secret \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --docker-email=${{ secrets.DOCKER_EMAIL }} \
            --namespace=${{ needs.dockerhubpush.outputs.namespace }}
          fi

      - name: Update Image Tag in Web deployment
        run: |
              kustomize edit set image hemilabs/hemihatchlings-web:latest=${{ needs.dockerhubpush.outputs.repo }}:${{ needs.dockerhubpush.outputs.tag }}
              kustomize edit set namespace ${{ needs.dockerhubpush.outputs.namespace }}
        working-directory: ./${{ needs.dockerhubpush.outputs.infra }}

      - name: Checking WEB Kustomize
        run: |
          kustomize build ./${{ needs.dockerhubpush.outputs.infra }}
          kubectl get all --namespace=${{ needs.dockerhubpush.outputs.namespace }}
      
      - name: Deploy WEB to VKE
        run: kubectl apply -k ./${{ needs.dockerhubpush.outputs.infra }}

      - name: Update Image Tag in API deployment
        env:
          tag: ${{ github.event.inputs.tag }}
          namespace: ${{ needs.dockerhubpush.outputs.namespace }}
        run: |
              kustomize edit set image hemilabs/hemihatchlings-api:1.0.0=hemilabs/hemihatchlings-api:${{ env.tag }}
              kustomize edit set namespace ${{ needs.dockerhubpush.outputs.namespace }}
        working-directory: ./infrastructure/kustomize_api/base

      - name: Checking API Kustomize
        env:
          namespace: ${{ needs.dockerhubpush.outputs.namespace }}
        run: |
          kustomize build ./infrastructure/kustomize_api/base/
          kubectl get all --namespace=${{ needs.dockerhubpush.outputs.namespace }}

      - name: Deploy API to VKE
        run: kubectl apply -k ./infrastructure/kustomize_api/base/

deploy_staging:
    name: "Deploy Staging to VKE"
    runs-on: "ubuntu-latest"
    needs: ["deploy_testnet_mainnet", "dockerhubpush"]
    permissions:
      contents: read
    environment:
      name: "staging"
      url: "https://hemihatchlings.letshamsterdance.xyz/"
    env:
      namespace: hemihatchlings-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.VKE_STAGING_KUBECONFIG }}
      
      - name: Install Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Configure K8s Cluster Access for VKE
        env:
          VKE_STAGING_KUBECONFIG : ${{ secrets.VKE_STAGING_KUBECONFIG }}
        run: |
          echo $VKE_STAGING_KUBECONFIG > ./kubeconfig.yaml
          export KUBECONFIG=$PWD/kubeconfig.yaml

      - name: Hemihatchlings Configmap
        run: |
          if kubectl get configmap hemihatchlings-config --namespace=${{ env.namespace }}; then
            echo "hemihatchlings-config already exists"
          else
            echo "Creating hemihatchlings-config"
            kubectl create configmap hemihatchlings-config \
            --from-literal=VITE_API_WEBSERVICE_URL=${{ secrets.AWS_ACCESS__KEY_ID }} \
            --from-literal=VITE_USE_API_MOCK=false \
            --namespace=${{ env.namespace }}
          fi
          echo "Checking Dockerhub Secret"

      - name: Dockerhub Secrets
        run: |
          if kubectl get secret dockerhub-secret --namespace=${{ env.namespace }}; then
            echo "Dockerhub Secret already exists"
          else
            echo "Creating Dockerhub Secret"
            kubectl create secret docker-registry dockerhub-secret \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username=${{ secrets.DOCKER_USERNAME }} \
            --docker-password=${{ secrets.DOCKER_PASSWORD }} \
            --docker-email=${{ secrets.DOCKER_EMAIL }} \
            --namespace=${{ env.namespace }}
          fi

      - name: Update Image Tag in deployment
        run: |
          kustomize edit set image hemilabs/hemihatchlings-web:latest=${{ needs.dockerhubpush.outputs.repo }}:${{ needs.dockerhubpush.outputs.tag }}
          kustomize edit set namespace ${{ env.namespace }}
        working-directory: ./infrastructure/kustomize_web/base

      - name: Checking Kustomize
        run: |
          kustomize build ./infrastructure/kustomize_web/overlays/staging
          kubectl get all --namespace=${{ env.namespace }}

      - name: Deploy Staging WEB to VKE
        run: kubectl apply -k ./infrastructure/kustomize_web/overlays/staging    

      - name: Update Image Tag in API deployment
        run: |
              kustomize edit set image hemilabs/hemihatchlings-api:1.0.0=hemilabs/hemihatchlings-api:${{ needs.dockerhubpush.outputs.tag }}
              kustomize edit set namespace ${{ env.namespace }}
        working-directory: ./infrastructure/kustomize_api/base

      - name: Checking Kustomize
        run: |
          kustomize build ./infrastructure/kustomize_api/base/
          kubectl get all --namespace=${{ env.namespace }}

      - name: Deploy STAGING API to VKE
        run: kubectl apply -k ./infrastructure/kustomize_api/base/
